"use strict"var express = require('express');var cookieParser = require('cookie-parser');var bodyParser = require('body-parser');const session = require('express-session');const MongoStore = require('connect-mongo')(session);var app = express();app.use(bodyParser.json());app.use(bodyParser.urlencoded({ extended: false }));app.use(cookieParser());// APIsvar mongoose = require('mongoose');mongoose.connect('mongodb://localhost:27017/wineshop')var db = mongoose.connection;db.on('error', console.error.bind(console, '# MongoDB - connection error: '));// --->>> SET UP SESSIONS <<<----app.use(session({  secret: 'mySecretString',  saveUninitialized: false,  resave:false,  store: new MongoStore({mongooseConnection: db, ttl: 2 * 24 * 60 * 60})  //ttl: 2 days * 24 hours * 60 minutes * 60 seconds}))  // SAVE SESSION CART API  app.post('/cart', function(req, res){    var cart = req.body;    req.session.cart = cart;    req.session.save(function(err){      if(err){        throw err;      }      res.json(req.session.cart);    })  });  // GET SESSION CART API  app.get('/cart', function(req, res){    if(typeof req.session.cart !== 'undefined'){      res.json(req.session.cart);    }  });//--->>> END SESSION SET UP <<<----var Wines = require('./models/wines.js');//---->>> POST WINES <<<-----app.post('/wines', function(req, res){  var wine = req.body;  Wines.create(wine, function(err, wines){    if(err){      throw err;    }    res.json(wines);  })});//----->>>> GET WINES <<<---------app.get('/wines', function(req, res){  Wines.find(function(err, wines){    if(err){      throw err;    }    res.json(wines)  })});//---->>> DELETE WINES <<<------app.delete('/wines/:_id', function(req, res){  var query = {_id: req.params._id};  Wines.remove(query, function(err, wines){    if(err){      console.log("# API DELETE WINES: ", err);    }    res.json(wines);  })});//---->>> UPDATE WINES <<<------app.put('/wines/:_id', function(req, res){  var wine = req.body;  var query = req.params._id;  // if the field doesn't exist $set will set a new field  var update = {    '$set':{      title:wine.title,      description:wine.description,      image:wine.image,      price:wine.price    }  };    // When true returns the updated document    var options = {new: true};    Wines.findOneAndUpdate(query, update, options, function(err, wines){      if(err){        throw err;      }      res.json(wines);    })})  // --->>> GET WINES IMAGES API <<<------  app.get('/images', function(req, res){    const imgFolder = __dirname + '/public/images/';    // REQUIRE FILE SYSTEM    const fs = require('fs');    //READ ALL FILES IN THE DIRECTORY    fs.readdir(imgFolder, function(err, files){      if(err){        return console.error(err);      }      //CREATE AN EMPTY ARRAY      const filesArr = [];      // ITERATE ALL IMAGES IN THE DIRECTORY AND ADD TO THE ARRAY      files.forEach(function(file){        filesArr.push({name: file});      });      // SEND THE JSON RESPONSE WITH THE ARARY      res.json(filesArr);    })  })// END APIsapp.listen(3001, function(err){  if(err){    return console.log(err);  }  console.log('API Sever is listening on http://localhost:3001');});